plugins {
    id 'java'
    id 'groovy'
}    

dependencies {
    compile gradleApi()
    compile localGroovy()
}

apply plugin: 'maven-publish'

group = "com.onefengma.gradle"
version = "0.1"
def mavenLocal = "../maven";
def name = "PluginTest";

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

publishing {
    publications {
        archives(MavenPublication) {
            groupId project.getGroup()
            artifactId "$name"
            version project.getVersion()
            artifact(project.getRootDir().absolutePath + "/build/libs/$name-$version" + ".jar") {
                extension 'jar'
            }
        }
    }
    repositories {
        maven {
            url "$mavenLocal"
        }
    }
} 

// println "--------this configureate 1" + gradle.startParameter.taskRequests.args[0][0].split(":", 2)

task testEvaluate {
    println "--------this configureate at test"

    doLast {
        println "--------this exec at test"
    }
}

afterEvaluate { project ->
    task addOne {
        println "--------this configureate at addOne"
    }
    println "--------afterEvaluate"
}

beforeEvaluate {
        println "--------beforeEvaluate"
}

println "--------this configureate 2"


rootProject.subprojects { project ->
    println "--------subporoject"
}

project.ext.methodMissing = { methodName, methodArgs ->
    println "MethodMissing:" + methodName + ":" + methodArgs
}


def data = ["123", "456", "789"]
println data.collect {
    it + ".so"
}

